<p>Events at the top are more recent than those at the bottom.</p>

<div class="display-12">
    <div id="experimentationArea"></div>
</div>
<script>

    var ready = function (fn) {

        // Sanity check
        if (typeof fn !== 'function') return;

        // If document is already loaded, run method
        if (document.readyState === 'interactive' || document.readyState === 'complete') {
            return fn();
        }

        // Otherwise, wait until document is loaded
        document.addEventListener('DOMContentLoaded', fn, false);
    };
    ready(function () {

        var element = document.getElementById("experimentationArea");
        var timeline = TimelinesChart()(element)
            .zQualitative(true)
            .width(900);

        let instanceId = window.location.pathname.split('/').slice(-1)[0];
        let url = `http://localhost:7071/runtime/webhooks/durabletask/instances/${instanceId}?showHistory=true&showInput=true&showHistoryOutput=true`;

        fetch(url)
            .then(function (response) {
                response.json().then(function (data) {
                    console.log(data.historyEvents);

                    timeline.data([{
                        group: data.name,
                        data: data.historyEvents.map((event, index) => {
                            let startTimestamp = new Date(event.Timestamp);
                            let endTimestamp = new Date(startTimestamp.setSeconds(startTimestamp.getSeconds() + 2));
                            return {
                                label: `${event.FunctionName}_${index-1}`,
                                data: [{
                                    timeRange: [startTimestamp, endTimestamp],
                                    val: event.EventType
                                }]
                            };
                        })
                    }])
                        .zQualitative(true)
                        .width(900);
                })
            });
        

    });
</script>
<table class="table">
    <thead>
        <tr>
            <th scope="col">EventId</th>
            <th scope="col">EventType</th>
            <th scope="col">Name</th>
            <th scope="col">IsPlayed</th>
            <th scope="col">Input</th>
            <th scope="col">Timestamp</th>
        </tr>
    </thead>
    <tbody>

        @*@foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@item.EventId</th>
                    <td>@item.EventType</td>
                    <td>@item.Name</td>
                    <td>@item.IsPlayed</td>
                    <td>@item.Input</td>
                    <td>@item.Timestamp</td>
                </tr>
            }*@
    </tbody>
</table>